{"version":3,"sources":["css-common.js","http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceWorker.js","index.js"],"names":["styles","appBar","backgroundColor","height","minHeight","name","marginRight","link","textTransform","color","margin","textDecoration","axios","create","baseURL","headers","params","http","get","id","data","post","put","delete","title","AddTutorial","props","onChangeTitle","bind","onChangeDescription","saveTutorial","newTutorial","state","description","published","submitted","e","this","setState","target","value","TutorialDataService","then","response","console","log","catch","classes","Fragment","className","form","Button","size","variant","onClick","TextFied","TextField","label","onChange","required","Component","withStyles","Tutorial","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","message","match","prevState","status","update","history","push","htmlFor","type","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","handlePageChange","handlePageSizeChange","tutorials","currentIndex","searchTitle","page","count","pageSize","pageSizes","getRequestParams","getAll","totalPages","tutorial","index","deleteAll","findByTitle","event","placeholder","map","Pagination","siblingCount","boundaryCount","shape","to","App","AppBar","position","Toolbar","Typography","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6f51c148.chunk.js","sourcesContent":["export const styles = {\r\n    appBar:{\r\n        backgroundColor: \"#343A40\",\r\n        height: \"50px\",\r\n        '& .MuiToolbar-regular':{\r\n            minHeight: \"50px\"\r\n        }\r\n    },\r\n    name:{\r\n        marginRight :\"15px\"\r\n    },\r\n    link:{\r\n        textTransform: \"unset\",\r\n        color:\"#a5a5a5\",\r\n        margin: \"0 20px\",\r\n        textDecoration: \"unset\"\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:8080/api\",\r\n    headers:{\r\n        \"Content-type\":\"application/json\"\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nclass TutorialDataService{\r\n    getAll(params){\r\n        return http.get(\"/tutorials\",{params});\r\n    }\r\n\r\n    get(id){\r\n        return http.get(`/tutorials/${id}`);\r\n    }\r\n\r\n    create(data){\r\n        return http.post(\"/tutorials\", data);\r\n    }\r\n\r\n    update(id, data){\r\n        return http.put(`/tutorials/${id}`, data);\r\n    }\r\n\r\n    delete(id){\r\n        return http.delete(`/tutorials/${id}`);\r\n    }\r\n\r\n    deleteAll(){\r\n        return http.delete(`/tutorials`);\r\n    }\r\n\r\n    findByTitle(title){\r\n        return http.get(`/tutorials?title=${title}`);\r\n    }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component} from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nimport { TextField, Button, withStyles} from \"@material-ui/core\"\r\nimport { styles} from \"../css-common\"\r\n\r\nclass AddTutorial extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.saveTutorial = this.saveTutorial.bind(this);\r\n        this.newTutorial = this.newTutorial.bind(this);\r\n\r\n        this.state ={\r\n            id: null,\r\n            title:\"\",\r\n            description:\"\",\r\n            published: false,\r\n\r\n            submitted: false\r\n        };\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        this.setState({\r\n            title: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n\r\n    saveTutorial(){\r\n        var data ={\r\n            title: this.state.title,\r\n            description: this.state.description\r\n        };\r\n\r\n        TutorialDataService.create(data)\r\n            .then(response =>{\r\n                this.setState({\r\n                    id: response.data.id,\r\n                    title: response.data.title,\r\n                    description: response.data.description,\r\n                    published: response.data.published,\r\n\r\n                    submitted: true\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e =>{\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    newTutorial(){\r\n        this.setState({\r\n            id: null,\r\n            title:\"\",\r\n            description:\"\",\r\n            published: false,\r\n\r\n            submitted: false\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { classes } =this.props\r\n        return(\r\n            <React.Fragment>\r\n                {this.state.submitted?(\r\n                    <div className={classes.form}>\r\n                        <h4>You Submitted successfully!</h4>\r\n                        <Button\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\" \r\n                        onClick={this.newTutorial}>\r\n                        Add\r\n                        </Button>\r\n                    </div>\r\n                ):(\r\n                    \r\n                        <div className={classes.form}>\r\n                            <div className={classes.TextFied}>\r\n                                <TextField \r\n                                    label=\"Title\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title}\r\n                                    onChange={this.onChangeTitle}\r\n                                    required\r\n                                />\r\n                            </div>\r\n                            <div className=\"classes.textField\">\r\n                                <TextField\r\n                                    label=\"Description\"\r\n                                    name=\"description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChangeDescription}\r\n                                    required\r\n                                />   \r\n                            </div>\r\n\r\n                            <Button \r\n                                size=\"small\"\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                onClick={this.saveTutorial}>\r\n                            Submit\r\n                            </Button>   \r\n                        </div>   \r\n\r\n                )}\r\n           </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(AddTutorial)","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class Tutorial extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.getTutorial = this.getTutorial.bind(this);\r\n        this.updatePublished = this.updatePublished.bind(this);\r\n        this.updateTutorial = this.updateTutorial.bind(this);\r\n        this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n        this.state ={\r\n            currentTutorial:{\r\n                id:null,\r\n                title:\"\",\r\n                description:\"\",\r\n                published: false\r\n            },\r\n            message:\"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getTutorial(this.props.match.params.id);\r\n    }\r\n\r\n    onChangeTitle(e){\r\n        const title = e.target.value;\r\n\r\n        this.setState(function(prevState){\r\n            return{\r\n                currentTutorial:{\r\n                    ...prevState.currentTutorial,\r\n                    title:title\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    onChangeDescription(e){\r\n        const description = e.target.value;\r\n\r\n        this.setState(prevState =>({\r\n            currentTutorial:{\r\n                ...prevState.currentTutorial,\r\n                description:description\r\n            }\r\n        }));\r\n    }\r\n\r\n    getTutorial(id){\r\n        TutorialDataService.get(id)\r\n            .then(response =>{\r\n                this.setState({\r\n                    currentTutorial: response.data\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    updatePublished(status){\r\n        var data = {\r\n            id: this.state.currentTutorial.id,\r\n            title: this.state.currentTutorial.title,\r\n            description: this.state.currentTutorial.description,\r\n            published:status\r\n        };\r\n\r\n        TutorialDataService.update(this.state.currentTutorial.id,data)\r\n            .then(response =>{\r\n                this.setState(prevState =>({\r\n                    currentTutorial:{\r\n                        ...prevState.currentTutorial,\r\n                        published:status\r\n                    }\r\n                }));\r\n                console.log(response.data);\r\n\r\n            })\r\n            .catch(e =>{\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    updateTutorial(){\r\n        TutorialDataService.update(\r\n            this.state.currentTutorial.id,\r\n            this.state.currentTutorial\r\n        )\r\n        .then(response =>{\r\n            console.log(response.data);\r\n            this.setState({\r\n                message:\"The tutorial was update successfully\"\r\n            });\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    }\r\n    deleteTutorial() {    \r\n        TutorialDataService.delete(this.state.currentTutorial.id)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.props.history.push('/tutorials')\r\n          })\r\n          .catch(e => {\r\n            console.log(e);\r\n          });\r\n      }\r\n    render() {\r\n        const { currentTutorial } = this.state;\r\n        return(\r\n            <div>\r\n                {currentTutorial ?(\r\n                    <div className=\"edit-form\">\r\n                    <h4>Tutorial</h4>\r\n                    <form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"title\"\r\n                                value={currentTutorial.title}\r\n                                onChange={this.onChangeTitle}\r\n                            />\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"description\"\r\n                                value={currentTutorial.description}\r\n                                onChange={this.onChangeDescription}\r\n                             />   \r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>\r\n                                <strong>Status:</strong>\r\n                            </label>\r\n                            {currentTutorial.published ? \"Published \":\"Pending\"}\r\n                        </div>\r\n                    </form>\r\n\r\n                    {currentTutorial.published ?(\r\n                        <button\r\n                            className=\"badge badgee-primary mr-2\"\r\n                            onClick={() => this.updatePublished(false)}\r\n                         >\r\n                             UnPublish\r\n                         </button>   \r\n                    ):(\r\n                        <button \r\n                            className=\"badge badge-primary mr-2\"\r\n                            onClick={() => this.updatePublished(true)}\r\n                         >\r\n                             Publish\r\n                         </button>   \r\n                    )}\r\n\r\n                    <button \r\n                        className=\"badge badge-danger mr-2\"\r\n                        onClick={this.deleteTutorial}\r\n                     >\r\n                         Delete\r\n                         </button>   \r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"badge badge-success\"\r\n                        onClick={this.updateTutorial}\r\n                    >\r\n                        Update\r\n                        </button>\r\n                    <p>{this.state.message}</p>             \r\n                    </div>\r\n                ):(\r\n                    <div>\r\n                        <br />\r\n                        <p>Please click on a Tutorial...</p>\r\n                    </div>   \r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component} from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nexport default class TutorialsList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n        this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n        this.refreshList = this.refreshList.bind(this);\r\n        this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n        this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    \r\n\r\n        this.state ={\r\n            tutorials:[],\r\n            currentTutorial:null,\r\n            currentIndex: -1,\r\n            searchTitle:\"\",\r\n\r\n            page: 1,\r\n            count: 0,\r\n            pageSize: 3,\r\n        };\r\n\r\n        this.pageSizes = [3, 6,9];\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.retrieveTutorials();\r\n    }\r\n\r\n    onChangeSearchTitle(e){\r\n        const searchTitle = e.target.value;\r\n\r\n        this.setState({\r\n            searchTitle: searchTitle,\r\n        });\r\n    }\r\n    \r\n    getRequestParams(searchTitle, page, pageSize){\r\n        let params = {};\r\n\r\n        if (searchTitle){\r\n            params[\"title\"] = searchTitle;\r\n        }\r\n\r\n        if (page){\r\n            params[\"page\"] = page - 1;\r\n        }\r\n\r\n        if(pageSize){\r\n            params[\"size\"] = pageSize;\r\n        }\r\n        return params;\r\n    }\r\n    retrieveTutorials(){\r\n        const { searchTitle, page, pageSize} = this.state;\r\n        const params = this.getRequestParams(searchTitle, page, pageSize);\r\n\r\n        TutorialDataService.getAll(params)\r\n            .then((response) =>{\r\n                const { tutorials,totalPages} = response.data;\r\n\r\n                this.setState({\r\n                    tutorials: tutorials,\r\n                    count: totalPages,\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e =>{\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    refreshList(){\r\n        this.retrieveTutorials();\r\n        this.setState({\r\n            currentTutorial: null,\r\n            currentIndex: -1,\r\n        });\r\n    }\r\n\r\n    setActiveTutorial(tutorial, index){\r\n        this.setState({\r\n            currentTutorial: tutorial,\r\n            currentIndex: index,\r\n        });\r\n    }\r\n\r\n    removeAllTutorials(){\r\n        TutorialDataService.deleteAll()\r\n            .then((response) =>{\r\n                console.log(response.data);\r\n                this.refreshList();\r\n            })\r\n            .catch((e) =>{\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    searchTitle(){\r\n        this.setState({\r\n            currentTutorial: null,\r\n            currentIndex: -1\r\n          });\r\n        TutorialDataService.findByTitle(this.state.searchTitle)\r\n            .then((response) =>{\r\n                this.state({\r\n                    tutorials:response.data\r\n                });\r\n                console.log(response.data);\r\n            })\r\n            .catch(e =>{\r\n                console.log(e);\r\n            });\r\n    }\r\n\r\n    handlePageChange( event ,value){\r\n        this.setState(\r\n            {\r\n                page:value,\r\n            },\r\n            () =>{\r\n                this.retrieveTutorials();\r\n            }\r\n        );\r\n    }\r\n\r\n    handlePageSizeChange(event){\r\n        this.setState(\r\n            {\r\n                pageSize: event.target.value,\r\n                page:1\r\n            },\r\n            () =>{\r\n                this.retrieveTutorials();\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        const { searchTitle, \r\n            tutorials, \r\n            currentTutorial, \r\n            currentIndex,\r\n            page, \r\n            count,\r\n            pageSize,\r\n            } = this.state;\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"list row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"input-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Search by title\"\r\n                                value={searchTitle}\r\n                                onChange={this.onChangeSearchTitle}\r\n                                />\r\n                                <div className=\"input-group-append\">\r\n                                    <button \r\n                                        className=\"btn btn-outline-secondary\"\r\n                                        type=\"button\"\r\n                                        onClick={this.retrieveTutorials}\r\n                                    >\r\n                                    Search\r\n                                    </button>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h4>Movie List</h4>\r\n                        <div className=\"mt-3\">\r\n                            {\"Items per Page:\"}\r\n                            <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                                {this.pageSizes.map((size) =>(\r\n                                    <option key={size} value={size}>\r\n                                        {size}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n\r\n                            <Pagination\r\n                                className=\"my-3\"\r\n                                count={count}\r\n                                page={page}\r\n                                siblingCount={1}\r\n                                boundaryCount={1}\r\n                                variant=\"outlined\"\r\n                                shape=\"rounded\"\r\n                                onChange={this.handlePageChange}\r\n                                />\r\n                        </div>\r\n\r\n\r\n                        <ul className =\"list-group\">\r\n                            {tutorials &&\r\n                                tutorials.map((tutorial, index) => (\r\n                                <li\r\n                                    className={\r\n                                        \"list-group-item \" +\r\n                                        (index === currentIndex ? \"active\" : \"\")\r\n                                    }\r\n                                    onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                                    key={index}\r\n                                    >\r\n                                    {tutorial.title}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <button\r\n                            className=\"m-3 btn btn-sm btn-danger\"\r\n                            onClick={this.removeAllTutorials}\r\n                        >\r\n                            Remove All\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    {currentTutorial ? (\r\n                        <div>\r\n                        <h4>Tutorial</h4>\r\n                        <div>\r\n                            <label>\r\n                            <strong>Title:</strong>\r\n                            </label>{\" \"}\r\n                            {currentTutorial.title}\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                            <strong>Description:</strong>\r\n                            </label>{\" \"}\r\n                            {currentTutorial.description}\r\n                        </div>\r\n                        <div>\r\n                            <label>\r\n                            <strong>Status:</strong>\r\n                            </label>{\" \"}\r\n                            {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n                        </div>\r\n                        <Link\r\n                            to={\"/tutorials/\" + currentTutorial.id}\r\n                            className=\"badge badge-warning\"\r\n                        >\r\n                            Edit\r\n                        </Link>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                        <br />\r\n                        <p>Please click on a Tutorial...</p>\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport { styles } from \"./css-common\"\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nimport { AppBar, Toolbar, Typography, withStyles } from '@material-ui/core';\nclass App extends Component {\n  render() {\n    const { classes } = this.props\n    return(\n      <div>\n        <AppBar className={classes.appBar} position=\"static\">\n          <Toolbar>\n            <Typography className={classes.name} variant=\"h6\">\n              Chinh IoT\n            </Typography>\n            <Link to={\"/tutorials\"} className={classes.link}>\n              <Typography variant=\"body2\">\n                Tutorials\n              </Typography>  \n            </Link>\n            <Link to={\"/add\"} className={classes.link}>\n              <Typography variant=\"body2\">\n                Add\n              </Typography>  \n            </Link> \n          </Toolbar>\n        </AppBar>\n\n       \n          <Switch>\n            <Route exact path={[\"/\",\"/tutorials\"]} component={TutorialsList}/>\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        \n\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles) (App);","///This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nimport App from './App';\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}